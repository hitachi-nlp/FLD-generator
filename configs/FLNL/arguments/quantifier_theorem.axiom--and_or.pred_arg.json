[
  {
      "id": "quantifier_theorem.universal.and_intro.pred_arg",
      "premises": [
          "(x): {A}x",
          "(x): {B}x"
      ],
      "conclusion": "(x): ({A}x & {B}x)"
  },
  {
      "id": "quantifier_theorem.universal.and_elim_0.pred_arg",
      "premises": [
          "(x): ({A}x & {B}x)"
      ],
      "conclusion": "(x): {A}x"
  },
  {
      "id": "quantifier_theorem.universal.and_elim_1.pred_arg",
      "premises": [
          "(x): ({A}x & {B}x)"
      ],
      "conclusion": "(x): {B}x"
  },


  {
      "id": "quantifier_theorem.universal.or_intro_0.pred_arg",
      "premises": [
          "(x): {A}x"
      ],
      "conclusion": "(x): ({A}x v {B}x)"
  },
  {
      "id": "quantifier_theorem.universal.or_intro_1.pred_arg",
      "premises": [
          "(x): {B}x"
      ],
      "conclusion": "(x): ({A}x v {B}x)"
  },
  {
      "id": "quantifier_theorem.universal.or_elim.pred_arg",
      "premises": [
          "(x): ({A}x v {B}x)",
          "(x): {A}x -> {C}x",
          "(x): {B}x -> {C}x"
      ],
      "conclusion": "(x): {C}x"
  },



  {
      "id": "__quantifier_theorem.existential.and_intro.pred_arg__",
      "__reason_for_rejection__": "wrong",
      "premises": [
          "(Ex): {A}x",
          "(Ex): {B}x"
      ],
      "conclusion": "(Ex): ({A}x & {B}x)"
  },
  {
      "id": "quantifier_theorem.existential.and_elim_0.pred_arg",
      "premises": [
          "(Ex): ({A}x & {B}x)"
      ],
      "conclusion": "(Ex): {A}x"
  },
  {
      "id": "quantifier_theorem.existential.and_elim_1.pred_arg",
      "premises": [
          "(Ex): ({A}x & {B}x)"
      ],
      "conclusion": "(Ex): {B}x"
  },


  {
      "id": "quantifier_theorem.existential.or_intro_0.pred_arg",
      "premises": [
          "(Ex): {A}x"
      ],
      "conclusion": "(Ex): ({A}x v {B}x)"
  },
  {
      "id": "quantifier_theorem.existential.or_intro_1.pred_arg",
      "premises": [
          "(Ex): {B}x"
      ],
      "conclusion": "(Ex): ({A}x v {B}x)"
  },
  {
      "id": "__quantifier_theorem.existential.__or_elim.pred_arg__",
      "__reason_for_rejection__": "wrong",
      "premises": [
          "(Ex): ({A}x v {B}x)",
          "(Ex): {A}x -> {C}x",
          "(Ex): {B}x -> {C}x"
      ],
      "conclusion": "(Ex): {C}x"
  }

]
